apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: mysql-dev
spec:
  serviceName: mysql
  replicas: 3 # 3 nodes for Group Replication
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
        - name: init-mysql
          image: mysql:8.0
          command:
            - "/bin/sh"
            - "-c"
            - >
              set -e;
              echo "Initializing MySQL data directory...";
              if [ ! -d "/var/lib/mysql/mysql" ]; then
                mysqld --initialize-insecure;
              fi
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql

      containers:
        - name: mysql
          image: mysql:8.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: MYSQL_REPL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-repl-password
            - name: MYSQL_GROUP_REPLICATION_LOCAL_ADDRESS
              value: "$(MY_POD_NAME).mysql:33061"
            - name: MYSQL_GROUP_REPLICATION_GROUP_SEEDS
              value: "mysql-0.mysql:33061,mysql-1.mysql:33061,mysql-2.mysql:33061"
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - |
                    echo "Waiting for MySQL to start..."
                    until mysqladmin ping -uroot -p$MYSQL_ROOT_PASSWORD --silent; do
                    sleep 5
                    echo "MySQL is not ready yet, retrying..."
                    done         

                    echo "Configuring MySQL Group Replication..."
                    mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "
                    SET SQL_LOG_BIN=0;
                    CREATE USER IF NOT EXISTS 'repl'@'%' IDENTIFIED WITH 'caching_sha2_password' BY '$MYSQL_REPL_PASSWORD';
                    GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';
                    CHANGE REPLICATION SOURCE TO SOURCE_USER='repl', SOURCE_PASSWORD='$MYSQL_REPL_PASSWORD', SOURCE_AUTO_POSITION=1;
                    SET GLOBAL group_replication_bootstrap_group=1;
                    START GROUP_REPLICATION;
                    SET GLOBAL group_replication_bootstrap_group=0;
                    "
                    wait
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-config
              mountPath: /etc/mysql
          readinessProbe:
          exec:
            command: ["mysqladmin", "ping", "-uroot", "-p$MYSQL_ROOT_PASSWORD"]
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10

          livenessProbe:
          exec:
            command: ["mysqladmin", "ping", "-uroot", "-p$MYSQL_ROOT_PASSWORD"]
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 5

  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: mysql-config
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Mi
